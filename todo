TODO
----
D remove parsing lr conflit

F use virtualenv (for pip dump)

R strip agg function into productions

F datamodel should be aggreatable

F numeric condition expression support (e.g. field > 5.6)

F? record tokens for debug

F column alias
F table alias

F README

## features
- simple join (left, inner, outer)
- normal multiple table support (like mysql)


DONE
----
F easier table definition
F float number support
F time, datetime support
F date support
D how to resolve limit & outfile confilt

R favor parse() to do parsing
R name and module clean
R move common logic into node.py

F git hook: pass test before commit
F INTO OUTFILE '/.../path/'

- add parser error handler
R use visit or value: (when ctx needed use visit, else use value)
R split data model
R move like out of comparator
- paren support in search condition

- in operator
T fix parser test 
R where clause -> use ro property

R grammer of sql BNF: string => productions
R auto link production -> class

R better grammer definition: | for multiple productions

F limit x
F per key order by DESC | ASC (__lt__, etc.)
F row class ordering
- order by

- having with function result support (search condition bind to table)
- simple having support
- group by without aggregate func func
- group by multiple columns

R remove table expr
R select core -> selete statments (rename)
- simple group by

- select_list => column, count(column)
- select_list => func(c1), func(c2)

- agg func: sum
- agg func: avg
- agg func: count, select_list => count(column)

- * support
I better __repr__ support (for debug)
R refactor tests
R folder structure: syntax

- multiple conditions: not
- comparator: like
- multiple conditions: and
- multiple conditions: or

- Query.execute() should return a new table (for subquery)
- add data type to table definition
- add map process for value coercion
- comparator: <, <=, >, >=
- string support

- [R] emtpy -> empty-where ?

- split productions into modules
- add fabric file: test commands, autopep8
- string comparation
- select hmultiple result columns
