============================= test session starts ==============================
platform darwin -- Python 2.7.5 -- pytest-2.3.5 -- /Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python
collecting ... collected 8 items

tests/test_comparators.py <- tests/testbase.py:53: LessThanCompTest.test_should_return_expected_results FAILED

=================================== FAILURES ===================================
_____________ LessThanCompTest.test_should_return_expected_results _____________

self = <dive.tests.test_comparators.LessThanCompTest testMethod=test_should_return_expected_results>

    def test_should_return_expected_results(self):
        expected = self.expected_select_result()
>       res = self._execute_query(self.sql)

tests/testbase.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dive.tests.test_comparators.LessThanCompTest testMethod=test_should_return_expected_results>
sql = 'select id, name, age from user where name < "c"'

    def _execute_query(self, sql):
>       tb = Query(sql, self.schema).execute()

tests/testbase.py:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dive.Query object at 0x101e7d650>

    def execute(self):
        # pylint: disable=E1101
        self.select = parse(self.sql)
        self.table = self.schema.find_table(self.select.table_name.value)
    
        name = str(uuid.uuid4())
        columns = self.select.select_list.columns(self.table)
        self.result_table = Table(name, columns, query=self)
    
>       self.select.visit(self)

__init__.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <SelectCore: SELECT <SelectList> FROM <TableName: user>>
ctx = <dive.Query object at 0x101e7d650>

    def visit(self, ctx):
        ctx.rdd = ctx.table.rdd(ctx.dpark)
        self.where.visit(ctx)
    
>       if not (self.select_list.has_aggregate_function or
                isinstance(self.groupby, GroupByClause)):

sql/syntax/select.py:74: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <SelectList>

    @property
    def has_aggregate_function(self):
>       return self.child.has_aggregate_function

sql/syntax/select.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <SelectSublist>

    @property
    def has_aggregate_function(self):
>       return any([nd.is_agg_func for nd in self.flattened_nodes])
E       AttributeError: 'DerivedColumn' object has no attribute 'is_agg_func'

sql/syntax/select.py:129: AttributeError
!!!!!!!!!!!!!!!!!!!! Interrupted: stopping after 1 failures !!!!!!!!!!!!!!!!!!!!
================== 7 tests deselected by '-kLessThanCompTest' ==================
==================== 1 failed, 7 deselected in 0.23 seconds ====================
select_expr : SELECT select_list item_1 FROM table_name item_2 item_3 item_4 item_5 item_6
item_6 : limit_clause
item_6 : 
item_5 : order_by_clause
item_5 : 
item_4 : having_clause
item_4 : 
item_3 : group_by_clause
item_3 : 
item_2 : where_clause
item_2 : 
item_1 : outfile_clause
item_1 : 
select_list : select_sublist
select_list : asterisk
select_sublist : derived_column item_7
item_7 : item_7 COMMA derived_column
item_7 : COMMA derived_column
item_7 : 
derived_column : value_expr
outfile_clause : INTO OUTFILE string
group_by_clause : GROUP BY grouping_column_list
grouping_column_list : column item_8
item_8 : item_8 COMMA column
item_8 : COMMA column
item_8 : 
order_by_clause : ORDER BY sort_spec_list
sort_spec_list : ordering_spec item_9
item_9 : item_9 COMMA ordering_spec
item_9 : COMMA ordering_spec
item_9 : 
ordering_spec : column DESC
ordering_spec : column ASC
ordering_spec : column
where_clause : WHERE search_condition
having_clause : HAVING search_condition
search_condition : boolean_value_expr
limit_clause : LIMIT NUMBER
boolean_value_expr : boolean_term item_10
item_10 : item_10 OR boolean_term
item_10 : OR boolean_term
item_10 : 
boolean_term : boolean_factor item_11
item_11 : item_11 AND boolean_factor
item_11 : AND boolean_factor
item_11 : 
boolean_factor : item_12 boolean_primary
item_12 : NOT
item_12 : 
boolean_primary : value_expr_primary
boolean_primary : predicate
predicate : like_predicate
predicate : in_predicate
predicate : comparison_predicate
like_predicate : column item_13 LIKE value_expr
item_13 : NOT
item_13 : 
in_predicate : column item_14 IN in_predicate_value
item_14 : NOT
item_14 : 
in_predicate_value : LEFT_PAREN in_value_list RIGHT_PAREN
in_value_list : value_expr item_15
item_15 : item_15 COMMA value_expr
item_15 : COMMA value_expr
item_15 : 
comparison_predicate : row_value_designator comparator row_value_designator
value_expr_primary : LEFT_PAREN boolean_value_expr RIGHT_PAREN
attribute_function : IDENTIFIER LEFT_PAREN column RIGHT_PAREN
row_value_designator : value_expr
value_expr : attribute_function
value_expr : column
value_expr : number
value_expr : string
comparator : GREATER_THAN_OR_EQUAL
comparator : GREATER_THAN
comparator : LESS_THAN_OR_EQUAL
comparator : LESS_THAN
comparator : EQUAL
asterisk : ASTERISK
string : STRING
number : NUMBER
column : IDENTIFIER
table_name : IDENTIFIER
